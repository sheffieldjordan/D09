#!/usr/bin/env python3# Exercise: Presidents# Write a program to:# Bonus: Confirm there are no ties. If there is a tie print like so:#     Ex.#       'least = 1900, 2013-2015'#       'John Doe (1900)'#       'Jane Doe (2013-2015)'#       'most = 1900-1934, 2013'#       'John Doe, Jane Doe, John Adams, and Jane Adams (1900-1933)'#       'Sally Doe, Billy Doe, Mary Doe, and Cary Doe (1934)'#       'Alice Doe, Bob Doe, Zane Doe, and Yi Do (2013)'############################################################################### Imports# Bodydef presidents():	with open('presidents.txt', 'r') as file_handle:		pres_dates_list = file_handle.read() #turns it into big string		pres_dates_list = pres_dates_list.splitlines() # splits the string into a list, using each new-line \n as the split point and removing it in the process.  		pres_dates = {}			# pres_dates[item[0]]		for i, pres in enumerate(pres_dates_list): # for each number/pres combo >> create this dictionary			pres_dates[pres_dates_list[i].split(",")[0]] = pres_dates_list[i].split(",")[1], pres_dates_list[i].split(",")[2]# split at comma# split at comma# split at comma			# dictionary[string within the list, split into list at the comma, 0th place in that list] = 1th place in that new sub-list, 2th place in the new sub-list		return pres_datesdef whos_alive(pres_dates):	min_yr = 1732 	max_yr = 2017	whos_alive = {}	for year in range(min_yr, max_yr):		whos_alive[year] = []  # for every year in the specified range, create a key in a dictionary equal to that year. Be sure to set it equal to an empty list so you can append the names in later 	for name, dates in pres_dates.items(): # for each  name, date pair in the pres_dates dict,  		for i in range(min_yr, max_yr): # and for each year in the total range, 			if dates[1] == "None": # set the None value equal to 2016				dates = (dates[0], '2017')			if i in range(int(dates[0]), int(dates[1])): # if the year in the total range is in the presidents birth/death pair: 				whos_alive[i].append(name)  # add his name to that year's value list in the the whos_alive dict	# for pair in whos_alive.items():		# print(pair)		pres_counter = [0]	for year, pres in whos_alive.items():		pres_counter.append(len(pres))	# print(pres_counter)	most_pres = max(pres_counter)	for year, pres in whos_alive.items():		# print(most_pres)		if len(pres) >= most_pres:			print("\n\n", "most = ", year)			for item in pres: 				print(item, end=", ")	for year, pres in whos_alive.items():		if len(pres) <= 1:			print("\n\n", "least = ", year)			for item in pres: 				print(item, end=" ")			# if key in range(birth, death):	# whos_alive[year].append(president) # (1) Load the data from presidents.txt into a dictionary.# (2) Print the years the greatest and least number of presidents were alive.#     (between 1732 and 2016 (inclusive))#     Ex.#       'least = 2015'#       'John Doe'#       'most = 2015'#       'John Doe, Jane Doe, John Adams, and Jane Adams'##############################################################################def main():  # CALL YOUR FUNCTION BELOW    whos_alive(presidents())if __name__ == '__main__':    main()